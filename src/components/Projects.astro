---
import GitHub from "./icons/GitHub.astro";
import CSS from "./icons/CSS.astro";
import Html5 from "./icons/Html5.astro";
import Javascript from "./icons/Javascript.astro";
import Kotlin from "./icons/Kotlin.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  HTML5: {
    name: "HTML",
    class: "bg-[#003159] text-white",
    icon: Html5,
  },
  CSS: {
    name: "CSS",
    class: "bg-[#003159] text-white",
    icon: CSS,
  },
  Javascript: {
    name: "Javascript",
    class: "bg-[#003159] text-white",
    icon: Javascript,
  },
  Kotlin: {
    name: "Kotlin",
    class: "bg-[#003159] text-white",
    icon: Kotlin,
  },
};

const PROJECTS = [
  {
    title: "Weather app - Aplicación del clima",
    description:
      "Aplicación web sencilla y responsiva para consultar el clima de cualquier ciudad del mundo. Consume una API pública para obtener los datos meteorológicos en tiempo real. Desarrollada con HTML, CSS y Javascript utilizando la API gratuita OpenWeatherMap.",
    link: "https://sam-dev0.github.io/Weather-APP/",
    github: "https://github.com/Sam-Dev0/Weather-APP",
    image: "/projects/weatherapp.webp",
    tags: [TAGS.HTML5, TAGS.CSS, TAGS.Javascript],
  },
  {
    title: "Table app - Aplicación para juegos de mesa",
    description:
      "Aplicación móvil gratuita para gestionar y organizar tus juegos de mesa. Permite llevar un registro de las rondas, puntajes y participantes de tus partidas. Desarrollada con Kotlin.",
    link: "",
    github: "",
    image: "/projects/pep.webp",
    tags: [TAGS.Kotlin],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <!-- Imagen del proyecto -->
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center transition duration-500 ease-in-out transform shadow-xl overflow-hidden rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={title}
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              decoding="async"
              src={image}
              onerror="this.src='/projects/placeholder.webp'" 
            />
          </div>
        </div>

        <!-- Info del proyecto -->
        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>

          <ul class="flex flex-row mt-3 mb-3 gap-x-2 gap-y-2 flex-wrap">
            {tags.map((tag) => (
              <li>
                <span
                  class={`flex items-center gap-2 rounded-full text-xs ${tag.class} py-1 px-3`}
                >
                  {tag.icon && <tag.icon class="w-4 h-4" />}
                  <span>{tag.name}</span>
                </span>
              </li>
            ))}
          </ul>

          <div class="mt-2 text-gray-700 dark:text-gray-400">
            {description}
          </div>

          <footer class="flex items-end justify-start mt-4 gap-x-4">
            {github && (
              <LinkButton href={github}>
                <GitHub class="size-6" />
                Code
              </LinkButton>
            )}
            {link && (
              <LinkButton href={link}>
                <Link class="size-4" />
                Preview
              </LinkButton>
            )}
          </footer>
        </div>
      </article>
    ))
  }
</div>